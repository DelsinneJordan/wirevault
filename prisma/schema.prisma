generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Board {
  id           Int        @id @default(autoincrement())
  shortId      String     @unique
  name         String
  customerName String
  siteAddress  String
  state        String     @default("ACTIVE")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  docs         BoardDoc[]
  qrToken      QrToken?   @relation(fields: [qrTokenId], references: [id])
  qrTokenId    Int?       @unique
  accessLogs   AccessLog[]
}

model QrToken {
  id        Int      @id @default(autoincrement())
  shortId   String   @unique
  pinHash   String
  status    String   @default("UNASSIGNED") // UNASSIGNED | ASSIGNED | RETIRED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  board     Board?
}

model BoardDoc {
  id         Int      @id @default(autoincrement())
  boardId    Int
  label      String
  mime       String
  storageKey String
  createdAt  DateTime @default(now())

  board      Board    @relation(fields: [boardId], references: [id])
}

model AccessLog {
  id         Int      @id @default(autoincrement())
  boardId    Int?
  shortId    String
  success    Boolean
  ip         String?
  userAgent  String?
  createdAt  DateTime @default(now())

  board      Board?   @relation(fields: [boardId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
